[1,["7dj5uJT9FMn6OrOOx83tfK@f9941","20g1ukYUVPvKWKBRznAKo+@f9941","54TknWPwVPqJqeCR+Y/Czo@f9941","95EkngnxZFbYuFpsqVTaFr@f9941","b7MFJ8MjNBwqr3fNq1j5dJ@f9941","012g6tz0JH5YdonkS/q2Jn@6c48a","b8sGXKaq1LpaFJFnjpKWuX@f9941","47YIcHn/NBEYmbAWei+eAC","012g6tz0JH5YdonkS/q2Jn@f9941","71t29n185ArZDy1b45uYEV@f9941","d0MqyYBeFAkIi762QNy1/B@b47c0","6fAc9/gb9Kfr1dCvwZaWSA@b47c0","20g1ukYUVPvKWKBRznAKo+@6c48a","5c5bgW9IZBuaSz7LIqlHFA","54TknWPwVPqJqeCR+Y/Czo@6c48a","71t29n185ArZDy1b45uYEV@6c48a","7dj5uJT9FMn6OrOOx83tfK@6c48a","95EkngnxZFbYuFpsqVTaFr@6c48a","b7MFJ8MjNBwqr3fNq1j5dJ@6c48a","b8sGXKaq1LpaFJFnjpKWuX@6c48a"],["node","_spriteFrame","_textureSource","_parent","_normalSprite","_target","_hoverSprite","_pressedSprite","_disabledSprite","_cameraComponent","icon","nSecond","nMinute","nHour","scaleBtn","item","scrollView","nOutSize","nInfo","nFestival","nData","_content","scene","_customMaterial","_envmapHDR","_envmapLDR","_effectAsset"],[["cc.Widget",["_alignFlags","_alignMode","_originalWidth","_originalHeight","_bottom","_right","_top","_left","_isAbsLeft","_verticalCenter","node"],-7,1],"cc.ImageAsset",["cc.Node",["_name","_layer","_active","_id","_objFlags","_components","_parent","_children","_lpos"],-2,9,1,2,5],"cc.SpriteFrame",["cc.Label",["_actualFontSize","_string","_fontSize","_lineHeight","_isBold","_overflow","_enableWrapText","node","_color"],-4,1,5],["cc.Sprite",["_sizeMode","_type","_enabled","node","_spriteFrame","_color","_customMaterial"],0,1,6,5,6],["cc.UITransform",["node","_contentSize","_anchorPoint"],3,1,5,5],["cc.Button",["_transition","_enabled","node","_normalSprite","_normalColor","_target","_hoverSprite","_pressedSprite","_disabledSprite"],1,1,6,5,1,6,6,6],["cc.Graphics",["_enabled","node","_fillColor"],2,1,5],"cc.TextureCube",["cc.Node",["_name","_layer","_active","_parent","_children","_components","_lpos"],0,1,2,12,5],["cc.Node",["_name","_layer","_parent","_components","_lpos"],1,1,2,5],["cc.Mask",["_enabled","node"],2,1],["cc.SceneAsset",["_name"],2],["cc.Canvas",["node","_cameraComponent"],3,1,1],["cf7deuWXitJ35u5Rdr3h67U",["node"],3,1],["b5e17jae3xMxpB+WoNYeEBE",["_enabled","node","icon"],2,1,1],["678bfc7La1EtZGAfA5+Mmb0",["node","nHour","nMinute","nSecond"],3,1,1,1,1],["867d0TUyqFFQJiXaxVtdq7P",["node","scrollView","item","scaleBtn"],3,1,1,1,1],["4d927P80VBKyoO2NaTi3lbc",["checkWidth","node"],2,1],["4d927P80VBKyoO2NaTi3lbc",["node","checkWidth"],3,1,5],["88fbf1Jdd1HabGPMsWFSOIJ",["node","nData","nFestival","nInfo","nOutSize"],3,1,1,1,1,1],["cc.ScrollView",["bounceDuration","brake","elastic","vertical","node","_content"],-1,1,1],["cc.Layout",["_resizeMode","_layoutType","node"],1,1],["cc.BlockInputEvents",["node"],3,1],["cc.PolygonCollider2D",["node","_points"],3,1,12],["538884HCvBPSoskpYp/rIWv",["node"],3,1],["916f3wkBldCyJYHygNXA75/",["node"],3,1],["cc.LabelOutline",["_width","node"],2,1],["cc.Scene",["_name","_children","_globals"],2,2,4],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree","lightProbeInfo"],3,4,4,4,4,4,4],["cc.AmbientInfo",["_skyIllumLDR","_skyColorHDR","_skyColorLDR","_groundAlbedoLDR"],2,5,5,5],["cc.ShadowsInfo",["_shadowColor"],3,5],["cc.SkyboxInfo",["_enabled","_envmapHDR","_envmapLDR"],2,6,6],["cc.FogInfo",[],3],["cc.OctreeInfo",[],3],["cc.LightProbeInfo",[],3],["cc.Camera",["_projection","_priority","_orthoHeight","_far","_clearFlags","_visibility","node","_color"],-3,1,5],["d5d1crBDMFIA4umJNt7GKmz",["node","scrollManager","viewManager","layoutManager","pageViewManager","releaseManager","centerManager"],3,1,4,4,4,4,4,4],["ScrollManager",["touchMode","_view","_content"],2,1,1],["ViewManager",[],3],["LayoutManager",["_childAlignment","_forceExpandWidth","_forceExpandHeight","_controlSizeWidth","_controlScaleWidth","_controlScaleHeight"],-3],["PageViewManager",[],3],["ReleaseManager",[],3],["CenterManager",[],3],["cc.Material",["_name","_props","_states","_defines"],-1],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[6,0,1,1],[2,0,1,6,5,3],[5,0,3,4,2],[2,0,1,6,5,8,3],[2,0,1,6,7,5,8,3],[6,0,1],[5,1,0,3,4,3],[4,1,0,2,3,4,7,8,6],[2,0,1,6,7,5,3],[2,0,4,1,6,5,4],[6,0,1,2,1],[0,0,2,3,10,4],[5,0,3,5,4,2],[4,1,0,2,5,6,7,8,6],[2,0,1,7,5,8,3],[0,0,4,10,3],[0,0,5,1,10,4],[0,0,2,3,1,10,5],[0,0,7,5,6,4,2,3,10,8],[7,0,2,4,5,3,6,7,8,2],[13,0,2],[2,0,1,3,7,5,8,4],[2,0,1,7,5,3],[2,0,2,1,6,7,5,8,4],[2,0,2,1,6,5,8,4],[10,0,2,1,3,4,5,6,4],[10,0,1,3,4,5,6,3],[11,0,2,3,4,2],[11,0,1,2,3,4,3],[14,0,1,1],[0,0,10,2],[0,0,7,5,2,1,10,6],[0,0,1,10,3],[0,0,4,3,10,4],[0,0,8,2,1,10,5],[0,0,3,10,3],[0,0,6,9,1,10,5],[0,0,4,1,10,4],[0,0,5,6,1,10,5],[0,0,7,5,6,4,2,3,1,10,9],[15,0,1],[16,0,1,2,2],[5,2,0,3,6,4,3],[17,0,1,2,3,1],[7,0,2,3,2],[7,1,0,2,4,5,3,6,7,8,3],[18,0,1,2,3,1],[19,0,1,2],[20,0,1,1],[21,0,1,2,3,4,1],[22,0,1,2,3,4,5,5],[12,0,1,2],[12,1,1],[8,0,1,2,2],[8,1,2,1],[8,1,1],[23,0,1,2,3],[24,0,1],[25,0,1,1],[26,0,1],[4,1,0,7,8,3],[4,1,0,2,3,7,8,5],[4,1,0,2,3,7,5],[4,0,2,3,7,8,4],[27,0,1],[28,0,1,2],[29,0,1,2,2],[30,0,1,2,3,4,5,1],[31,0,1,2,3,2],[32,0,1],[33,0,1,2,2],[34,1],[35,1],[36,1],[37,0,1,2,3,4,5,6,7,7],[38,0,1,2,3,4,5,6,1],[39,0,1,2,2],[40,1],[41,0,1,2,3,4,5,7],[42,1],[43,1],[44,1],[45,0,1,2,3,5],[46,0,1,2,4]],[[[{"name":"e295453e8465f9c8477b9fe70d3df267","rect":{"x":0,"y":0,"width":991,"height":774},"offset":{"x":0,"y":0},"originalSize":{"width":991,"height":774},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-495.5,-387,0,495.5,-387,0,-495.5,387,0,495.5,387,0],"indexes":[0,1,2,2,1,3],"uv":[0,774,991,774,0,0,991,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-495.5,"y":-387,"z":0},"maxPos":{"x":495.5,"y":387,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[3],0,[0],[2],[5]],[[[20,"preload"],[21,"Canvas",33554432,"999cbIBnJICp8OKg/vQSYh",[-8,-9,-10,-11,-12,-13,-14,-15,-16],[[0,-1,[5,720,1280]],[29,-3,-2],[30,45,-4],[40,-5],[41,false,-7,-6]],[1,360,640,0]],[14,"clock",33554432,[-25,-26,-27,-28],[[5,-17],[2,0,-18,4],[43,-22,-21,-20,-19],[15,4,250,-23],[44,3,-24,5]],[1,277.841,-340,0]],[25,"ScrollView",false,33554432,1,[-38,-39,-40],[[[10,-29,[5,600,900],[0,0,1]],[6,1,0,-30,16],[31,42,60,60,600,0,-31],-32,[46,-36,-35,-34,-33],[47,10,-37]],4,4,4,1,4,4],[1,-300,450,0]],[4,"item",33554432,3,[-47,-48,-49,-50,-51],[[5,-41],[49,-46,-45,-44,-43,-42]],[1,1844.457,-1500.427,0]],[4,"Button",33554432,3,[-57],[[0,-52,[5,40,40]],[6,1,0,-53,11],[45,false,2,-55,[4,4292269782],-54,12,13,14,15],[32,36,1,-56]],[1,580,-880,0]],[22,"table",33554432,[-61,2,-62],[[0,-58,[5,2426.473,1280]],[2,0,-59,7],[33,5,-4.263256414560601e-14,1286.516,-60]]],[14,"title",33554432,[-66,-67,-68],[[0,-63,[5,400,30]],[34,41,false,100,1,-64],[2,0,-65,28]],[1,0,185,0]],[4,"Button",33554432,7,[-74],[[0,-69,[5,50,40]],[6,1,0,-70,18],[19,2,-72,[4,4292269782],-71,19,20,21,22],[16,33,0.7105000000000246,1,-73]],[1,174.28949999999998,-5,0]],[4,"Button-001",33554432,7,[-80],[[0,-75,[5,50,40]],[6,1,0,-76,23],[19,2,-78,[4,4292269782],-77,24,25,26,27],[16,33,50.710500000000025,1,-79]],[1,124.28949999999998,-5,0]],[8,"ScrollView",33554432,1,[-86],[[0,-81,[5,720,1280]],[6,1,0,-82,8],[50,0.23,0.75,false,false,-84,-83],[11,45,240,250,-85]]],[8,"view",33554432,10,[-91],[[0,-87,[5,720,1280]],[51,false,-88],[53,false,-89,[4,16777215]],[11,45,240,250,-90]]],[4,"content",33554432,11,[6],[[0,-92,[5,2426.473,1280]],[35,5,400,-93],[56,1,1,-94]],[1,-10,0,0]],[26,"view",33554432,3,[-99],[[-95,[52,-96],[54,-97,[4,16777215]],[17,45,240,250,1,-98]],1,4,4,4],[1,300,0,0]],[23,"panelBase",false,33554432,1,[7],[[0,-100,[5,400,400]],[2,0,-101,29],[57,-102],[48,-103,[2,10,0,10,10]]],[1,-101.085,-58.524,0]],[1,"Sprite",33554432,1,[[0,-104,[5,244,366]],[2,0,-105,1],[58,-106,[[[0,-58,183],[0,-58,151],[0,-70,157],[0,-90,159],[0,-90,155],[0,-72,139],[0,-88,139],[0,-100,135],[0,-98,129],[0,-84,125],[0,-76,119],[0,-82,109],[0,-96,59],[0,-102,13],[0,-102,-25],[0,-122,-69],[0,-120,-75],[0,-110,-67],[0,-102,-65],[0,-100,-61],[0,-96,-61],[0,-114,-91],[0,-114,-95],[0,-110,-95],[0,-92,-81],[0,-104,-103],[0,-98,-103],[0,-74,-83],[0,-72,-85],[0,-76,-95],[0,-68,-93],[0,-58,-85],[0,-58,-91],[0,-62,-95],[0,-78,-103],[0,-86,-157],[0,-96,-183],[0,-92,-183],[0,-60,-151],[0,-58,-123],[0,-50,-123],[0,-42,-119],[0,-42,-115],[0,-38,-113],[0,-40,-137],[0,-36,-137],[0,-28,-121],[0,-26,-109],[0,-24,-117],[0,-20,-117],[0,-18,-107],[0,-10,-105],[0,0,-87],[0,0,-103],[0,4,-103],[0,4,-117],[0,-4,-149],[0,6,-139],[0,10,-139],[0,12,-133],[0,30,-115],[0,34,-107],[0,34,-93],[0,38,-87],[0,50,-83],[0,50,-101],[0,54,-101],[0,66,-87],[0,62,-105],[0,70,-101],[0,70,-97],[0,84,-85],[0,84,-81],[0,94,-71],[0,108,-43],[0,110,-11],[0,122,57],[0,122,97],[0,118,109],[0,110,119],[0,108,127],[0,86,147],[0,52,165],[0,24,171],[0,-6,171],[0,-40,157],[0,-54,183]],8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]],[59,-107]]],[1,"outside",33554432,4,[[5,-108],[12,0,-109,[4,4287993340],9],[17,45,100,100,1,-110]]],[3,"data",33554432,4,[[0,-111,[5,44.49,50.4]],[60,"30",40,-112,[4,4278190080]],[36,18,10,10,1,-113]],[1,0,10,0]],[3,"festival",33554432,4,[[0,-114,[5,60,25.2]],[7,"愚人节",20,20,20,true,-115,[4,4278190080]],[37,20,8,1,-116]],[1,0,-29.4,0]],[3,"info",33554432,4,[[0,-117,[5,20,25.2]],[61,"班",20,20,20,-118,[4,4279440383]],[38,33,7,7,1,-119]],[1,33,30.4,0]],[1,"WordCloud",33554432,1,[[0,-120,[5,320,880]],[18,45,200,200,200,200,100,100,-121],[64,-122],[55,-123]]],[1,"bg",33554432,1,[[0,-124,[5,720,1280]],[12,0,-125,[4,4286479998],0],[11,45,100,100,-126]]],[4,"windows",33554432,6,[-128,-129],[[0,-127,[5,700,1000]]],[1,0,165.506,0]],[1,"SpriteSplash",33554432,22,[[0,-130,[5,699.154,843.108]],[42,false,0,-131,2,3],[15,4,78.44600000000003,-132]]],[3,"h",33554432,2,[[0,-133,[5,43.33,37.8]],[7,"HH",30,30,30,true,-134,[4,4278190080]]],[1,-24.554,19.804,0]],[3,"m",33554432,2,[[0,-135,[5,49.98,37.8]],[7,"MM",30,30,30,true,-136,[4,4278190080]]],[1,23.711,19.526,0]],[3,"s",33554432,2,[[0,-137,[5,40.02,37.8]],[7,"SS",30,30,30,true,-138,[4,4278190080]]],[1,-0.311,-19.02,0]],[8,"calendar",33554432,6,[-140,-141],[[5,-139]]],[1,"bg",33554432,4,[[0,-142,[5,90,90]],[2,0,-143,10],[39,45,5,5,5,5,90,90,1,-144]]],[24,"mousicon",false,33554432,1,[[0,-145,[5,50,50]],[12,0,-146,[4,4284900976],17]],[1,-112.61,-1925.589,0]],[1,"Label",33554432,7,[[0,-147,[5,62,39.8]],[62,"道具",30,30,30,-148],[65,1,-149]]],[1,"WordCloud-001",33554432,1,[[0,-150,[5,320,880]],[18,45,200,200,200,200,100,100,-151],[2,0,-152,30]]],[3,"Label-003",33554432,2,[[0,-153,[5,9.99,37.8]],[7,":",30,30,30,true,-154,[4,4278190080]]],[1,-1.958,21.362,0]],[1,"SpriteSplash",33554432,27,[[5,-155],[2,0,-156,6]]],[1,"Label",33554432,27,[[0,-157,[5,63.38,37.8]],[63,30,30,30,-158,[4,4278190080]]]],[9,"Label",512,33554432,5,[[0,-159,[5,100,40]],[13,"/",20,20,1,false,-160,[4,4278190080]]]],[9,"Label",512,33554432,8,[[0,-161,[5,100,40]],[13,"X",20,20,1,false,-162,[4,4278190080]]]],[9,"Label",512,33554432,9,[[0,-163,[5,100,40]],[13,"-",20,20,1,false,-164,[4,4278190080]]]],[66,"preload",[1],[67,[68,0.8,[2,0.2,0.5,0.8,0.520833125],[2,0.452588,0.607642,0.755699,0],[2,0.618555,0.577848,0.544564,0]],[69,[4,4283190348]],[70,true,31,32],[71],[72],[73]]],[27,"Camera",1,[-165],[1,0,0,1000]],[74,0,1073741824,640,2000,6,41943040,39,[4,4278190080]],[1,"SpriteSplash-001",33554432,22,[[0,-166,[5,200,200]]]],[28,"content",33554432,13,[-167],[1,-10,125,0]],[10,42,[5,220,400],[0,0.5,1]],[10,13,[5,600,900],[0,0.5,1]],[75,3,[76,2,44,43],[77],[78,3,true,false,true,true,true],[79],[80],[81]]],0,[0,0,1,0,9,40,0,0,1,0,0,1,0,0,1,0,10,29,0,0,1,0,-1,39,0,-2,21,0,-3,15,0,-4,10,0,-5,3,0,-6,29,0,-7,14,0,-8,31,0,-9,20,0,0,2,0,0,2,0,11,26,0,12,25,0,13,24,0,0,2,0,0,2,0,0,2,0,-1,24,0,-2,25,0,-3,32,0,-4,26,0,0,3,0,0,3,0,0,3,0,-4,45,0,14,5,0,15,4,0,16,45,0,0,3,0,0,3,0,-1,4,0,-2,13,0,-3,5,0,0,4,0,17,16,0,18,19,0,19,18,0,20,17,0,0,4,0,-1,16,0,-2,28,0,-3,17,0,-4,18,0,-5,19,0,0,5,0,0,5,0,5,5,0,0,5,0,0,5,0,-1,35,0,0,6,0,0,6,0,0,6,0,-1,22,0,-3,27,0,0,7,0,0,7,0,0,7,0,-1,8,0,-2,9,0,-3,30,0,0,8,0,0,8,0,5,8,0,0,8,0,0,8,0,-1,36,0,0,9,0,0,9,0,5,9,0,0,9,0,0,9,0,-1,37,0,0,10,0,0,10,0,21,12,0,0,10,0,0,10,0,-1,11,0,0,11,0,0,11,0,0,11,0,0,11,0,-1,12,0,0,12,0,0,12,0,0,12,0,-1,44,0,0,13,0,0,13,0,0,13,0,-1,42,0,0,14,0,0,14,0,0,14,0,0,14,0,0,15,0,0,15,0,0,15,0,0,15,0,0,16,0,0,16,0,0,16,0,0,17,0,0,17,0,0,17,0,0,18,0,0,18,0,0,18,0,0,19,0,0,19,0,0,19,0,0,20,0,0,20,0,0,20,0,0,20,0,0,21,0,0,21,0,0,21,0,0,22,0,-1,23,0,-2,41,0,0,23,0,0,23,0,0,23,0,0,24,0,0,24,0,0,25,0,0,25,0,0,26,0,0,26,0,0,27,0,-1,33,0,-2,34,0,0,28,0,0,28,0,0,28,0,0,29,0,0,29,0,0,30,0,0,30,0,0,30,0,0,31,0,0,31,0,0,31,0,0,32,0,0,32,0,0,33,0,0,33,0,0,34,0,0,34,0,0,35,0,0,35,0,0,36,0,0,36,0,0,37,0,0,37,0,-1,40,0,0,41,0,-1,43,0,22,38,1,3,38,2,3,6,6,3,12,7,3,14,167],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,23,1,1,4,1,1,1,1,1,1,4,6,7,8,1,1,1,4,6,7,8,1,4,6,7,8,1,1,1,24,25],[0,6,7,8,0,0,0,9,4,0,0,1,1,1,2,3,4,0,1,1,1,2,3,1,1,1,2,3,0,0,0,10,11]],[[{"name":"default_btn_normal","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"vertices":{"rawPosition":[-20,-20,0,20,-20,0,-20,20,0,20,20,0],"indexes":[0,1,2,2,1,3],"uv":[0,40,40,40,0,0,40,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-20,"y":-20,"z":0},"maxPos":{"x":20,"y":20,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[3],0,[0],[2],[12]],[[[82,"rain",[{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true}]]],0,0,[0],[26],[13]],[[{"name":"default_btn_pressed","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"vertices":{"rawPosition":[-20,-20,0,20,-20,0,-20,20,0,20,20,0],"indexes":[0,1,2,2,1,3],"uv":[0,40,40,40,0,0,40,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-20,"y":-20,"z":0},"maxPos":{"x":20,"y":20,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[3],0,[0],[2],[14]],[[[83,"../models/shader/rain/rain",[{"hash":2227227691,"name":"../models/shader/rain/rain|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Constant","stageFlags":16,"binding":1,"members":[{"name":"uSpeed","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":["USE_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Constant","stageFlags":16,"binding":1,"members":[{"name":"uSpeed","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n  };\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183f\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_POINT 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_SPHERE 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nin vec4 color;\n#if USE_TEXTURE\n  in vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\n  layout(std140) uniform Constant {\n  float uSpeed;\n};\nvec2 c_UV0_main_4() {\n    return uv0;\n}\nvec3 c_RainDrop_N13_3(float p)\n{\n   vec3 p3 = fract(vec3(p) * vec3(0.1031, 0.11369, 0.13787));\n   p3 += dot(p3, p3.yzx + 19.19);\n   return fract(vec3((p3.x + p3.y) * p3.z, (p3.x + p3.z) * p3.y, (p3.y + p3.z) * p3.x));\n}\nfloat c_RainDrop_N15_3(float t)\n{\n    return fract(sin(t * 12345.564) * 7658.76);\n}\nfloat c_RainDrop_Saw_3(float b, float t)\n{\n    return smoothstep(0.0, b, t) * smoothstep(1.0, b, t);\n}\nvec2 c_RainDrop_dropLayer_3(vec2 uv, float t)\n{\n    vec2 UV = uv;\n    uv.y += t * 0.75;\n    vec2 a = vec2(6.0, 1.0);\n    vec2 grid = a *2.0;\n    vec2 id = floor(uv * grid);\n    float colShift = c_RainDrop_N15_3(id.x);\n    uv.y += colShift;\n    id = floor(uv * grid);\n    vec3 n = c_RainDrop_N13_3(id.x * 35.2 + id.y * 2376.1);\n    vec2 st = fract(uv * grid) - vec2(0.5, 0);\n    float x = n.x - 0.5;\n    float y = UV.y * 20.0;\n    float wiggle = sin(y + sin(y));\n    x += wiggle * (0.5 - abs(x)) * (n.z - 0.5);\n    x *= 0.7;\n    float ti = fract(t + n.z);\n    y = (c_RainDrop_Saw_3(0.85, ti) - 0.5) * 0.9 + 0.5;\n    vec2 p = vec2(x, y);\n    float d = length((st-p) * a.yx);\n    float c_RainDrop_main_3Drop = smoothstep(0.4, 0.0, d);\n    float r = sqrt(smoothstep(1.0, y, st.y));\n    float cd = abs(st.x - x);\n    float trail = smoothstep(0.23 * r, 0.15 * r * r, cd);\n    float trailFront = smoothstep(-0.02, 0.02, st.y - y);\n    trail *= trailFront * r * r;\n    y = UV.y;\n    float trail2 = smoothstep(0.2 * r, 0.0, cd);\n    float droplets = max(0.0, (sin(y * (1.0 - y) * 120.0) - st.y)) * trail2 * trailFront * n.z;\n    y = fract(y * 10.0) + (st.y - 0.5);\n    float dd = length(st - vec2(x, y));\n    droplets = smoothstep(0.3, 0.0, dd);\n    float m = c_RainDrop_main_3Drop + droplets * r * trailFront;\n    return vec2(m, trail);\n}\nfloat c_RainDrop_StaticDrops_3(vec2 uv, float t)\n{\n    uv *= 40.;\n    vec2 id = floor(uv);\n    uv = fract(uv) - 0.5;\n    vec3 n = c_RainDrop_N13_3(id.x * 107.45 + id.y * 3543.654);\n    vec2 p = (n.xy - 0.5) * 0.7;\n    float d = length(uv-p);\n    float fade = c_RainDrop_Saw_3(0.025, fract(t + n.z));\n    float c = smoothstep(0.3, 0.0, d) * fract(n.z * 10.0) * fade;\n    return c;\n}\nvec2 c_RainDrop_Drops_3(vec2 uv, float t, float l0, float l1, float l2)\n{\n    float s = c_RainDrop_StaticDrops_3(uv, t) * l0;\n    vec2 m1 = c_RainDrop_dropLayer_3(uv, t) * l1;\n    vec2 m2 = c_RainDrop_dropLayer_3(vec2(0.0), t) * l2;\n    float c = s + m1.x + m2.x;\n    c = smoothstep(.3, 1.0, c);\n    return vec2(c, max(m1.y * l0, m2.y * l1));\n}\nvec4 c_RainDrop_main_3(sampler2D Tex, vec2 UV, float Seed, float Speed)\n{\n    float T = Seed * Speed;\n    float t = T*.5 * -1.0;\n    float rainAmount =  3.076;\n    float maxBlur = mix(3., 6., rainAmount);\n    float minBlur = 1.216;\n    float staticDrops = smoothstep(-.5, 1., rainAmount)*0.5;\n    float layer1 = smoothstep(.25, .75, rainAmount);\n    float layer2 = smoothstep(.0, .5, rainAmount);\n    vec2 c = c_RainDrop_Drops_3(UV, t, staticDrops, layer1, layer2);\n    vec2 e = vec2(.001, 0.);\n    float cx = c_RainDrop_Drops_3(UV + e, t, staticDrops, layer1, layer2).x;\n    float cy = c_RainDrop_Drops_3(UV + e.yx, t, staticDrops, layer1, layer2).x;\n    vec2 n = vec2(cx - c.x, cy - c.x);\n    float focus = mix(maxBlur - c.y, minBlur, smoothstep(0.0, 0.0, c.x));\n    vec3 col = texture(Tex, UV + n, focus).rgb;\n    float colFade = sin(t*.2)*.5+.5;\n    col *= mix(vec3(1.), vec3(.8, .9, 1.3), 0.0);\n    return vec4(col, texture(Tex, UV).a);\n}\nvec4 c_Output_main_1(vec4 Color) {\n    return Color;\n}\nvec4 shaderfx()\n{\n    vec2 out_UV_UV0_4 = c_UV0_main_4();\n    vec4 out_Output_RainDrop_3 = c_RainDrop_main_3(cc_spriteTexture, vec2(out_UV_UV0_4), cc_time[0], uSpeed);\n    return c_Output_main_1(vec4(out_Output_RainDrop_3));\n}\nvec4 frag () {\n   vec4 o = shaderfx();\n   o *= color;\n   ALPHA_TEST(o);\n   return o;\n }\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183f\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_POINT 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_SPHERE 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform highp vec4 cc_time;\nvarying vec4 color;\n#if USE_TEXTURE\n  varying vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\n       uniform float uSpeed;\nvec2 c_UV0_main_4() {\n    return uv0;\n}\nvec3 c_RainDrop_N13_3(float p)\n{\n   vec3 p3 = fract(vec3(p) * vec3(0.1031, 0.11369, 0.13787));\n   p3 += dot(p3, p3.yzx + 19.19);\n   return fract(vec3((p3.x + p3.y) * p3.z, (p3.x + p3.z) * p3.y, (p3.y + p3.z) * p3.x));\n}\nfloat c_RainDrop_N15_3(float t)\n{\n    return fract(sin(t * 12345.564) * 7658.76);\n}\nfloat c_RainDrop_Saw_3(float b, float t)\n{\n    return smoothstep(0.0, b, t) * smoothstep(1.0, b, t);\n}\nvec2 c_RainDrop_dropLayer_3(vec2 uv, float t)\n{\n    vec2 UV = uv;\n    uv.y += t * 0.75;\n    vec2 a = vec2(6.0, 1.0);\n    vec2 grid = a *2.0;\n    vec2 id = floor(uv * grid);\n    float colShift = c_RainDrop_N15_3(id.x);\n    uv.y += colShift;\n    id = floor(uv * grid);\n    vec3 n = c_RainDrop_N13_3(id.x * 35.2 + id.y * 2376.1);\n    vec2 st = fract(uv * grid) - vec2(0.5, 0);\n    float x = n.x - 0.5;\n    float y = UV.y * 20.0;\n    float wiggle = sin(y + sin(y));\n    x += wiggle * (0.5 - abs(x)) * (n.z - 0.5);\n    x *= 0.7;\n    float ti = fract(t + n.z);\n    y = (c_RainDrop_Saw_3(0.85, ti) - 0.5) * 0.9 + 0.5;\n    vec2 p = vec2(x, y);\n    float d = length((st-p) * a.yx);\n    float c_RainDrop_main_3Drop = smoothstep(0.4, 0.0, d);\n    float r = sqrt(smoothstep(1.0, y, st.y));\n    float cd = abs(st.x - x);\n    float trail = smoothstep(0.23 * r, 0.15 * r * r, cd);\n    float trailFront = smoothstep(-0.02, 0.02, st.y - y);\n    trail *= trailFront * r * r;\n    y = UV.y;\n    float trail2 = smoothstep(0.2 * r, 0.0, cd);\n    float droplets = max(0.0, (sin(y * (1.0 - y) * 120.0) - st.y)) * trail2 * trailFront * n.z;\n    y = fract(y * 10.0) + (st.y - 0.5);\n    float dd = length(st - vec2(x, y));\n    droplets = smoothstep(0.3, 0.0, dd);\n    float m = c_RainDrop_main_3Drop + droplets * r * trailFront;\n    return vec2(m, trail);\n}\nfloat c_RainDrop_StaticDrops_3(vec2 uv, float t)\n{\n    uv *= 40.;\n    vec2 id = floor(uv);\n    uv = fract(uv) - 0.5;\n    vec3 n = c_RainDrop_N13_3(id.x * 107.45 + id.y * 3543.654);\n    vec2 p = (n.xy - 0.5) * 0.7;\n    float d = length(uv-p);\n    float fade = c_RainDrop_Saw_3(0.025, fract(t + n.z));\n    float c = smoothstep(0.3, 0.0, d) * fract(n.z * 10.0) * fade;\n    return c;\n}\nvec2 c_RainDrop_Drops_3(vec2 uv, float t, float l0, float l1, float l2)\n{\n    float s = c_RainDrop_StaticDrops_3(uv, t) * l0;\n    vec2 m1 = c_RainDrop_dropLayer_3(uv, t) * l1;\n    vec2 m2 = c_RainDrop_dropLayer_3(vec2(0.0), t) * l2;\n    float c = s + m1.x + m2.x;\n    c = smoothstep(.3, 1.0, c);\n    return vec2(c, max(m1.y * l0, m2.y * l1));\n}\nvec4 c_RainDrop_main_3(sampler2D Tex, vec2 UV, float Seed, float Speed)\n{\n    float T = Seed * Speed;\n    float t = T*.5 * -1.0;\n    float rainAmount =  3.076;\n    float maxBlur = mix(3., 6., rainAmount);\n    float minBlur = 1.216;\n    float staticDrops = smoothstep(-.5, 1., rainAmount)*0.5;\n    float layer1 = smoothstep(.25, .75, rainAmount);\n    float layer2 = smoothstep(.0, .5, rainAmount);\n    vec2 c = c_RainDrop_Drops_3(UV, t, staticDrops, layer1, layer2);\n    vec2 e = vec2(.001, 0.);\n    float cx = c_RainDrop_Drops_3(UV + e, t, staticDrops, layer1, layer2).x;\n    float cy = c_RainDrop_Drops_3(UV + e.yx, t, staticDrops, layer1, layer2).x;\n    vec2 n = vec2(cx - c.x, cy - c.x);\n    float focus = mix(maxBlur - c.y, minBlur, smoothstep(0.0, 0.0, c.x));\n    vec3 col = texture2D(Tex, UV + n, focus).rgb;\n    float colFade = sin(t*.2)*.5+.5;\n    col *= mix(vec3(1.), vec3(.8, .9, 1.3), 0.0);\n    return vec4(col, texture2D(Tex, UV).a);\n}\nvec4 c_Output_main_1(vec4 Color) {\n    return Color;\n}\nvec4 shaderfx()\n{\n    vec2 out_UV_UV0_4 = c_UV0_main_4();\n    vec4 out_Output_RainDrop_3 = c_RainDrop_main_3(cc_spriteTexture, vec2(out_UV_UV0_4), cc_time[0], uSpeed);\n    return c_Output_main_1(vec4(out_Output_RainDrop_3));\n}\nvec4 frag () {\n   vec4 o = shaderfx();\n   o *= color;\n   ALPHA_TEST(o);\n   return o;\n }\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":54,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":44}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"}]}],[{"passes":[{"program":"../models/shader/rain/rain|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"uSpeed":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]],[[{"base":"2,2,0,0,2,0","rgbe":false,"mipmaps":[{"front":"6fAc9/gb9Kfr1dCvwZaWSA@b47c0@e9a6d","back":"6fAc9/gb9Kfr1dCvwZaWSA@b47c0@40c10","left":"6fAc9/gb9Kfr1dCvwZaWSA@b47c0@8fd34","right":"6fAc9/gb9Kfr1dCvwZaWSA@b47c0@74afd","top":"6fAc9/gb9Kfr1dCvwZaWSA@b47c0@bb97f","bottom":"6fAc9/gb9Kfr1dCvwZaWSA@b47c0@7d38f"}]}],[9],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"name":"389ff3487ea86839fbecfe4c80670bee","rect":{"x":0,"y":0,"width":593,"height":300},"offset":{"x":0,"y":0},"originalSize":{"width":593,"height":300},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-296.5,-150,0,296.5,-150,0,-296.5,150,0,296.5,150,0],"indexes":[0,1,2,2,1,3],"uv":[0,300,593,300,0,0,593,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-296.5,"y":-150,"z":0},"maxPos":{"x":296.5,"y":150,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[3],0,[0],[2],[15]],[[{"name":"default_sprite_splash","rect":{"x":0,"y":0,"width":2,"height":2},"offset":{"x":0,"y":0},"originalSize":{"width":2,"height":2},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-1,-1,0,1,-1,0,-1,1,0,1,1,0],"indexes":[0,1,2,2,1,3],"uv":[0,2,2,2,0,0,2,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-1,"y":-1,"z":0},"maxPos":{"x":1,"y":1,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[3],0,[0],[2],[16]],[[{"name":"default_btn_disabled","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"vertices":{"rawPosition":[-20,-20,0,20,-20,0,-20,20,0,20,20,0],"indexes":[0,1,2,2,1,3],"uv":[0,40,40,40,0,0,40,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-20,"y":-20,"z":0},"maxPos":{"x":20,"y":20,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[3],0,[0],[2],[17]],[[{"name":"default_panel","rect":{"x":0,"y":0,"width":20,"height":20},"offset":{"x":0,"y":0},"originalSize":{"width":20,"height":20},"rotated":false,"capInsets":[8,8,8,8],"vertices":{"rawPosition":[-10,-10,0,10,-10,0,-10,10,0,10,10,0],"indexes":[0,1,2,2,1,3],"uv":[0,20,20,20,0,0,20,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-10,"y":-10,"z":0},"maxPos":{"x":10,"y":10,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[3],0,[0],[2],[18]],[[{"name":"Ghost","rect":{"x":2,"y":3,"width":122,"height":183},"offset":{"x":-1,"y":-0.5},"originalSize":{"width":128,"height":188},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-61,-91.5,0,61,-91.5,0,-61,91.5,0,61,91.5,0],"indexes":[0,1,2,2,1,3],"uv":[2,185,124,185,2,2,124,2],"nuv":[0.015625,0.010638297872340425,0.96875,0.010638297872340425,0.015625,0.9840425531914894,0.96875,0.9840425531914894],"minPos":{"x":-61,"y":-91.5,"z":0},"maxPos":{"x":61,"y":91.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[3],0,[0],[2],[19]],[[{"base":"2,2,0,0,2,0","rgbe":true,"mipmaps":[{"front":"d0MqyYBeFAkIi762QNy1/B@b47c0@e9a6d","back":"d0MqyYBeFAkIi762QNy1/B@b47c0@40c10","left":"d0MqyYBeFAkIi762QNy1/B@b47c0@8fd34","right":"d0MqyYBeFAkIi762QNy1/B@b47c0@74afd","top":"d0MqyYBeFAkIi762QNy1/B@b47c0@bb97f","bottom":"d0MqyYBeFAkIi762QNy1/B@b47c0@7d38f"}]}],[9],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]]]]
